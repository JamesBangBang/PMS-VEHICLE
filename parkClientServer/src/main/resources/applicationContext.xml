<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">


    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <context:component-scan base-package="com.starnetsecurity">
        <context:exclude-filter type="regex" expression="com.starnetsecurity.common.mongo.*"/>
        <context:exclude-filter type="regex" expression="com.starnetsecurity.common.mongoDao.*"/>
        <context:exclude-filter type="regex" expression="com.starnetsecurity.commonService.service.*"/>
    </context:component-scan>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="GBK"></property>
        <property name="locations">
            <list>
                <value>classpath*:jdbc.properties</value>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.starnetsecurity.parkClientServer.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                <prop key="connection.characterEncoding">UTF-8</prop>
                <prop key="connection.useUnicode">true</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <!--最大连接数 -->
                <prop key="hibernate.c3p0.max_size">50</prop>
                <!--连接超时时间 -->
                <prop key="hibernate.c3p0.timeout">120</prop>
                <!--statemnets缓存大小 -->
                <prop key="hibernate.c3p0.max_statements">100</prop>
                <!--每隔多少秒检测连接是否可正常使用 -->
                <prop key="hibernate.c3p0.idle_test_period">120</prop>
                <!--当池中的连接耗尽的时候，一次性增加的连接数量,默认为3 -->
                <prop key="hibernate.c3p0.acquire_increment">2</prop>
                <!-- 每次都验证连接是否可用 -->
                <prop key="hibernate.c3p0.validate">true</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="100"/>
        <property name="maxIdleTime" value="1800"/>
        <property name="acquireIncrement" value="3"/>
        <property name="maxStatements" value="1000"/>
        <property name="initialPoolSize" value="10"/>
        <property name="idleConnectionTestPeriod" value="60"/>
        <property name="acquireRetryAttempts" value="0"/>
        <property name="acquireRetryDelay" value="1000"/>
        <property name="breakAfterAcquireFailure" value="true"/>
        <property name="testConnectionOnCheckout" value="false"/>
        <property name="autoCommitOnClose" value="true"/>
    </bean>


    <!-- 配置事务异常封装 -->
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 启动事务管理注解器 -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.starnetsecurity.parkClientServer.service.*.*(..))"/>
        <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>

    <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="merge*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="new*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="return*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="upload*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="handle*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="push*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="shift*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="deal*" propagation="REQUIRED" timeout="120" rollback-for="Exception"/>
            <tx:method name="*" timeout="120"/>
        </tx:attributes>
    </tx:advice>

    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>

    <task:annotation-driven executor="functionStatusExecutor" scheduler="functionStatusScheduler"/>
    <task:executor id="functionStatusExecutor" pool-size="5"/>
    <task:scheduler id="functionStatusScheduler" pool-size="10"/>

    <bean id="bizUnitTool" class="com.starnetsecurity.parkClientServer.init.BizUnitTool">
        <property name="clientBizService" ref="clientBizServiceImpl"></property>
        <property name="deviceBizService" ref="deviceBizServiceImpl"></property>
    </bean>

    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" />

    <rabbit:admin connection-factory="connectionFactory"/>

    <rabbit:queue id="listenQueue" name="${mq.queue}" durable="true" auto-delete="false" exclusive="false" />

    <bean id="rabbitMqListener" class="com.starnetsecurity.parkClientServer.mq.RabbitMqListener"/>

    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="listenQueue" ref="rabbitMqListener"/>
    </rabbit:listener-container>
</beans>